{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useLayoutEffect } from \"react\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useSelector } from \"react-redux\";\nimport AppLoading from \"expo-app-loading\";\nimport { useFonts } from \"expo-font\";\nimport { Container, AddButton, AddButtonImage, NotesList, NoNotes, NoNotesImage, NoNotesText } from \"./styles\";\nimport NoteItem from \"../../components/NoteItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function () {\n  var navigation = useNavigation();\n  var list = useSelector(function (state) {\n    return state.notes.list;\n  });\n  useEffect(function () {\n    BackHandler.addEventListener(\"hardwareBackPress\", function () {\n      return true;\n    });\n  }, []);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"Notes\",\n      headerLeft: false,\n      headerRight: function headerRight() {\n        return _jsx(AddButton, {\n          underlayColor: \"transparent\",\n          onPress: function onPress() {\n            return navigation.navigate(\"EditNote\");\n          },\n          children: _jsx(AddButtonImage, {\n            source: require(\"../../assets/more.png\")\n          })\n        });\n      }\n    });\n  }, []);\n  var handleNotePress = function handleNotePress(index) {\n    navigation.navigate(\"EditNote\", {\n      key: index\n    });\n  };\n  var _useFonts = useFonts({\n      \"WorkSans-SemiBold\": require(\"../../../assets/fonts/WorkSans/WorkSans-SemiBold.ttf\"),\n      \"WorkSans-Regular\": require(\"../../../assets/fonts/WorkSans/WorkSans-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 2),\n    fontsLoaded = _useFonts2[0],\n    error = _useFonts2[1];\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  }\n  return _jsxs(Container, {\n    children: [list.length > 0 && _jsx(NotesList, {\n      data: list,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item,\n          index = _ref.index;\n        return _jsx(NoteItem, {\n          data: item,\n          index: index,\n          onPress: handleNotePress\n        });\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      }\n    }), list.length === 0 && _jsxs(NoNotes, {\n      children: [_jsx(NoNotesImage, {\n        source: require(\"../../assets/nonotes.png\")\n      }), _jsx(NoNotesText, {\n        style: {\n          fontFamily: \"WorkSans-SemiBold\"\n        },\n        children: \"Empty\"\n      })]\n    })]\n  });\n});","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useNavigation","useSelector","AppLoading","useFonts","Container","AddButton","AddButtonImage","NotesList","NoNotes","NoNotesImage","NoNotesText","NoteItem","navigation","list","state","notes","BackHandler","addEventListener","setOptions","title","headerLeft","headerRight","navigate","require","handleNotePress","index","key","fontsLoaded","error","length","item","toString","fontFamily"],"sources":["D:/Tugas/Kuliah/Makul/Semester 3/Pemrograman Mobile/Praktik/React Native/Tubes/notes/src/pages/ListScreen/index.js"],"sourcesContent":["import React, { useEffect, useLayoutEffect } from \"react\";\r\nimport { BackHandler } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport AppLoading from \"expo-app-loading\";\r\nimport { useFonts } from \"expo-font\";\r\n\r\nimport {\r\n  Container,\r\n  AddButton,\r\n  AddButtonImage,\r\n  NotesList,\r\n  NoNotes,\r\n  NoNotesImage,\r\n  NoNotesText,\r\n} from \"./styles\";\r\n\r\nimport NoteItem from \"../../components/NoteItem\";\r\n\r\nexport default () => {\r\n  const navigation = useNavigation();\r\n  const list = useSelector((state) => state.notes.list);\r\n\r\n  useEffect(() => {\r\n    BackHandler.addEventListener(\"hardwareBackPress\", () => true);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: \"Notes\",\r\n      headerLeft: false,\r\n      headerRight: () => (\r\n        <AddButton\r\n          underlayColor=\"transparent\"\r\n          onPress={() => navigation.navigate(\"EditNote\")}\r\n        >\r\n          <AddButtonImage source={require(\"../../assets/more.png\")} />\r\n        </AddButton>\r\n      ),\r\n    });\r\n  }, []);\r\n\r\n  const handleNotePress = (index) => {\r\n    navigation.navigate(\"EditNote\", {\r\n      key: index,\r\n    });\r\n  };\r\n\r\n  let [fontsLoaded, error] = useFonts({\r\n    \"WorkSans-SemiBold\": require(\"../../../assets/fonts/WorkSans/WorkSans-SemiBold.ttf\"),\r\n    \"WorkSans-Regular\": require(\"../../../assets/fonts/WorkSans/WorkSans-Regular.ttf\"),\r\n  });\r\n\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {list.length > 0 && (\r\n        <NotesList\r\n          data={list}\r\n          renderItem={({ item, index }) => (\r\n            <NoteItem data={item} index={index} onPress={handleNotePress} />\r\n          )}\r\n          keyExtractor={(item, index) => index.toString()}\r\n        />\r\n      )}\r\n      {list.length === 0 && (\r\n        <NoNotes>\r\n          <NoNotesImage source={require(\"../../assets/nonotes.png\")} />\r\n          <NoNotesText style={{ fontFamily: \"WorkSans-SemiBold\" }}>\r\n            Empty\r\n          </NoNotesText>\r\n        </NoNotes>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,eAAe,QAAQ,OAAO;AAAC;AAE1D,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,SAASC,QAAQ,QAAQ,WAAW;AAEpC,SACEC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,SAAS,EACTC,OAAO,EACPC,YAAY,EACZC,WAAW;AAGb,OAAOC,QAAQ;AAAkC;AAAA;AAEjD,gBAAe,YAAM;EACnB,IAAMC,UAAU,GAAGZ,aAAa,EAAE;EAClC,IAAMa,IAAI,GAAGZ,WAAW,CAAC,UAACa,KAAK;IAAA,OAAKA,KAAK,CAACC,KAAK,CAACF,IAAI;EAAA,EAAC;EAErDf,SAAS,CAAC,YAAM;IACdkB,WAAW,CAACC,gBAAgB,CAAC,mBAAmB,EAAE;MAAA,OAAM,IAAI;IAAA,EAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAENlB,eAAe,CAAC,YAAM;IACpBa,UAAU,CAACM,UAAU,CAAC;MACpBC,KAAK,EAAE,OAAO;MACdC,UAAU,EAAE,KAAK;MACjBC,WAAW,EAAE;QAAA,OACX,KAAC,SAAS;UACR,aAAa,EAAC,aAAa;UAC3B,OAAO,EAAE;YAAA,OAAMT,UAAU,CAACU,QAAQ,CAAC,UAAU,CAAC;UAAA,CAAC;UAAA,UAE/C,KAAC,cAAc;YAAC,MAAM,EAAEC,OAAO;UAA0B;QAAG,EAClD;MAAA;IAEhB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAIC,KAAK,EAAK;IACjCb,UAAU,CAACU,QAAQ,CAAC,UAAU,EAAE;MAC9BI,GAAG,EAAED;IACP,CAAC,CAAC;EACJ,CAAC;EAED,gBAA2BtB,QAAQ,CAAC;MAClC,mBAAmB,EAAEoB,OAAO,wDAAwD;MACpF,kBAAkB,EAAEA,OAAO;IAC7B,CAAC,CAAC;IAAA;IAHGI,WAAW;IAAEC,KAAK;EAKvB,IAAI,CAACD,WAAW,EAAE;IAChB,OAAO,KAAC,UAAU,KAAG;EACvB;EAEA,OACE,MAAC,SAAS;IAAA,WACPd,IAAI,CAACgB,MAAM,GAAG,CAAC,IACd,KAAC,SAAS;MACR,IAAI,EAAEhB,IAAK;MACX,UAAU,EAAE;QAAA,IAAGiB,IAAI,QAAJA,IAAI;UAAEL,KAAK,QAALA,KAAK;QAAA,OACxB,KAAC,QAAQ;UAAC,IAAI,EAAEK,IAAK;UAAC,KAAK,EAAEL,KAAM;UAAC,OAAO,EAAED;QAAgB,EAAG;MAAA,CAChE;MACF,YAAY,EAAE,sBAACM,IAAI,EAAEL,KAAK;QAAA,OAAKA,KAAK,CAACM,QAAQ,EAAE;MAAA;IAAC,EAEnD,EACAlB,IAAI,CAACgB,MAAM,KAAK,CAAC,IAChB,MAAC,OAAO;MAAA,WACN,KAAC,YAAY;QAAC,MAAM,EAAEN,OAAO;MAA6B,EAAG,EAC7D,KAAC,WAAW;QAAC,KAAK,EAAE;UAAES,UAAU,EAAE;QAAoB,CAAE;QAAA;MAAA,EAE1C;IAAA,EAEjB;EAAA,EACS;AAEhB,CAAC"},"metadata":{},"sourceType":"module"}