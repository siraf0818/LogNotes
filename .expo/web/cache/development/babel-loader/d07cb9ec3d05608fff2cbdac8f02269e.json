{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useRoute, useNavigation } from \"@react-navigation/native\";\nimport { Container, TitleInput, BodyInput, SaveButton, SaveButtonImage, CloseButton, CloseButtonImage, ButtonsContainer, DeleteButton, DeleteButtonText } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function () {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var dispatch = useDispatch();\n  var list = useSelector(function (state) {\n    return state.notes.list;\n  });\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    body = _useState4[0],\n    setBody = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    done = _useState6[0],\n    setDone = _useState6[1];\n  var _useState7 = useState(\"new\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    status = _useState8[0],\n    setStatus = _useState8[1];\n  useEffect(function () {\n    var _route$params;\n    if (((_route$params = route.params) == null ? void 0 : _route$params.key) !== undefined && list[route.params.key]) {\n      setStatus(\"edit\");\n      setTitle(list[route.params.key].title);\n      setBody(list[route.params.key].body);\n      setDone(list[route.params.key].done);\n    }\n  }, []);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: status === \"new\" ? \"New Note\" : \"Edit Note\",\n      headerLeft: function headerLeft() {\n        return _jsx(CloseButton, {\n          underlayColor: \"transparent\",\n          onPress: handleCloseButton,\n          children: _jsx(CloseButtonImage, {\n            source: require(\"../../assets/close.png\")\n          })\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsx(SaveButton, {\n          underlayColor: \"transparent\",\n          onPress: handleSaveButton,\n          children: _jsx(SaveButtonImage, {\n            source: require(\"../../assets/save.png\")\n          })\n        });\n      }\n    });\n  }, [status, title, body]);\n  var handleSaveButton = function handleSaveButton() {\n    if (title !== \"\" && body !== \"\") {\n      if (status === \"edit\") {\n        dispatch({\n          type: \"EDIT_NOTE\",\n          payload: {\n            key: route.params.key,\n            title: title,\n            body: body,\n            done: done\n          }\n        });\n      } else {\n        dispatch({\n          type: \"ADD_NOTE\",\n          payload: {\n            title: title,\n            body: body\n          }\n        });\n      }\n      navigation.navigate(\"List\");\n    } else {\n      alert(\"Type your note\");\n    }\n  };\n  var handleCloseButton = function handleCloseButton() {\n    return navigation.navigate(\"List\");\n  };\n  var handleDeleteNote = function handleDeleteNote() {\n    dispatch({\n      type: \"DELETE_NOTE\",\n      payload: {\n        key: route.params.key\n      }\n    });\n    navigation.navigate(\"List\");\n  };\n  var handleSuccessNote = function handleSuccessNote() {\n    dispatch({\n      type: \"SUCCESS_NOTE\",\n      payload: {\n        key: route.params.key,\n        title: title,\n        body: body\n      }\n    });\n    navigation.navigate(\"List\");\n  };\n  var handleNoSuccessNote = function handleNoSuccessNote() {\n    dispatch({\n      type: \"UNCHECK_NOTE\",\n      payload: {\n        key: route.params.key,\n        title: title,\n        body: body\n      }\n    });\n    navigation.navigate(\"List\");\n  };\n  return _jsxs(Container, {\n    children: [_jsx(TitleInput, {\n      value: title,\n      onChangeText: function onChangeText(t) {\n        return setTitle(t);\n      },\n      placeholder: \"Title\",\n      placeholderTextColor: \"#ccc\",\n      autoFocus: true,\n      style: {\n        fontFamily: \"WorkSans-SemiBold\"\n      }\n    }), _jsx(BodyInput, {\n      value: body,\n      onChangeText: function onChangeText(t) {\n        return setBody(t);\n      },\n      placeholder: \"Body\",\n      placeholderTextColor: \"#ccc\",\n      multiline: true,\n      textAlignVertical: \"top\",\n      style: {\n        fontFamily: \"WorkSans-Regular\"\n      }\n    }), status === \"edit\" && _jsx(ButtonsContainer, {\n      children: _jsx(DeleteButton, {\n        underlayColor: \"#FF0000\",\n        onPress: handleDeleteNote,\n        children: _jsx(DeleteButtonText, {\n          style: {\n            fontFamily: \"WorkSans-Regular\"\n          },\n          children: \"Delete\"\n        })\n      })\n    })]\n  });\n});","map":{"version":3,"names":["React","useState","useEffect","useLayoutEffect","useSelector","useDispatch","useRoute","useNavigation","Container","TitleInput","BodyInput","SaveButton","SaveButtonImage","CloseButton","CloseButtonImage","ButtonsContainer","DeleteButton","DeleteButtonText","navigation","route","dispatch","list","state","notes","title","setTitle","body","setBody","done","setDone","status","setStatus","params","key","undefined","setOptions","headerLeft","handleCloseButton","require","headerRight","handleSaveButton","type","payload","navigate","alert","handleDeleteNote","handleSuccessNote","handleNoSuccessNote","t","fontFamily"],"sources":["D:/Tugas/Kuliah/Makul/Semester 3/Pemrograman Mobile/Praktik/React Native/Tubes/notes/src/pages/EditNoteScreen/index.js"],"sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useRoute, useNavigation } from \"@react-navigation/native\";\r\n\r\nimport {\r\n  Container,\r\n  TitleInput,\r\n  BodyInput,\r\n  SaveButton,\r\n  SaveButtonImage,\r\n  CloseButton,\r\n  CloseButtonImage,\r\n  ButtonsContainer,\r\n  DeleteButton,\r\n  DeleteButtonText,\r\n} from \"./styles\";\r\n\r\nexport default () => {\r\n  const navigation = useNavigation();\r\n  const route = useRoute();\r\n  const dispatch = useDispatch();\r\n  const list = useSelector((state) => state.notes.list);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [done, setDone] = useState(false);\r\n  const [status, setStatus] = useState(\"new\");\r\n\r\n  useEffect(() => {\r\n    if (route.params?.key !== undefined && list[route.params.key]) {\r\n      setStatus(\"edit\");\r\n      setTitle(list[route.params.key].title);\r\n      setBody(list[route.params.key].body);\r\n      setDone(list[route.params.key].done);\r\n    }\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: status === \"new\" ? \"New Note\" : \"Edit Note\",\r\n      headerLeft: () => (\r\n        <CloseButton underlayColor=\"transparent\" onPress={handleCloseButton}>\r\n          <CloseButtonImage source={require(\"../../assets/close.png\")} />\r\n        </CloseButton>\r\n      ),\r\n      headerRight: () => (\r\n        <SaveButton underlayColor=\"transparent\" onPress={handleSaveButton}>\r\n          <SaveButtonImage source={require(\"../../assets/save.png\")} />\r\n        </SaveButton>\r\n      ),\r\n    });\r\n  }, [status, title, body]);\r\n\r\n  const handleSaveButton = () => {\r\n    if (title !== \"\" && body !== \"\") {\r\n      if (status === \"edit\") {\r\n        dispatch({\r\n          type: \"EDIT_NOTE\",\r\n          payload: {\r\n            key: route.params.key,\r\n            title,\r\n            body,\r\n            done,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: \"ADD_NOTE\",\r\n          payload: { title, body },\r\n        });\r\n      }\r\n\r\n      navigation.navigate(\"List\");\r\n    } else {\r\n      alert(\"Type your note\");\r\n    }\r\n  };\r\n\r\n  const handleCloseButton = () => navigation.navigate(\"List\");\r\n\r\n  const handleDeleteNote = () => {\r\n    dispatch({\r\n      type: \"DELETE_NOTE\",\r\n      payload: {\r\n        key: route.params.key,\r\n      },\r\n    });\r\n    navigation.navigate(\"List\");\r\n  };\r\n\r\n  const handleSuccessNote = () => {\r\n    dispatch({\r\n      type: \"SUCCESS_NOTE\",\r\n      payload: {\r\n        key: route.params.key,\r\n        title,\r\n        body,\r\n      },\r\n    });\r\n    navigation.navigate(\"List\");\r\n  };\r\n\r\n  const handleNoSuccessNote = () => {\r\n    dispatch({\r\n      type: \"UNCHECK_NOTE\",\r\n      payload: {\r\n        key: route.params.key,\r\n        title,\r\n        body,\r\n      },\r\n    });\r\n    navigation.navigate(\"List\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <TitleInput\r\n        value={title}\r\n        onChangeText={(t) => setTitle(t)}\r\n        placeholder=\"Title\"\r\n        placeholderTextColor=\"#ccc\"\r\n        autoFocus={true}\r\n        style={{ fontFamily: \"WorkSans-SemiBold\" }}\r\n      />\r\n      <BodyInput\r\n        value={body}\r\n        onChangeText={(t) => setBody(t)}\r\n        placeholder=\"Body\"\r\n        placeholderTextColor=\"#ccc\"\r\n        multiline={true}\r\n        textAlignVertical=\"top\"\r\n        style={{ fontFamily: \"WorkSans-Regular\" }}\r\n      />\r\n      {status === \"edit\" && (\r\n        <ButtonsContainer>\r\n          <DeleteButton underlayColor=\"#FF0000\" onPress={handleDeleteNote}>\r\n            <DeleteButtonText style={{ fontFamily: \"WorkSans-Regular\" }}>\r\n              Delete\r\n            </DeleteButtonText>\r\n          </DeleteButton>\r\n        </ButtonsContainer>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}